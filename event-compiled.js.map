{"version":3,"sources":["event.js"],"names":[],"mappings":"AAAA;;;AAGA;AACA,MAAM,SAAS,QAAQ,QAAR,CAAf;AACA;AACA,MAAM,eAAe,IAAI,OAAO,YAAX,EAArB;;AAEA;AACA;AACA;AACA,IAAI,UAAU,YAAU;AACpB,YAAQ,GAAR,CAAY,WAAZ;AACH,CAFD;AAGA;AACA,aAAa,EAAb,CAAgB,OAAhB,EAAwB,OAAxB,E,CAAiC;AACjC;AACA,aAAa,WAAb,CAAyB,OAAzB,EAAiC,MAAI;AACjC,YAAQ,GAAR,CAAY,wBAAZ;AACH,CAFD;AAGA;AACA;AACA,aAAa,IAAb,CAAkB,OAAlB;AACA;AACA,IAAI,iBAAiB,YAAU;AAC3B,YAAQ,GAAR,CAAY,MAAZ;AACA,iBAAa,IAAb,CAAkB,eAAlB;AACH,CAHD;AAIA,aAAa,EAAb,CAAgB,SAAhB,EAA0B,cAA1B;AACA,IAAI,kBAAkB,YAAU;AAC5B,YAAQ,GAAR,CAAY,MAAZ;AACH,CAFD;AAGA,aAAa,EAAb,CAAgB,eAAhB,EAAgC,eAAhC;AACA,aAAa,IAAb,CAAkB,SAAlB;AACA,QAAQ,GAAR,CAAY,QAAZ;;AAEA;AACA,aAAa,EAAb,CAAgB,aAAhB,EAA8B,CAAC,IAAD,EAAM,IAAN,KAAa;AACvC,YAAQ,GAAR,CAAa,iBAAgB,IAAK,QAAO,IAAK,EAA9C;AACH,CAFD;AAGA,aAAa,EAAb,CAAgB,aAAhB,EAA8B,CAAC,IAAD,EAAM,IAAN,KAAa;AACvC,YAAQ,GAAR,CAAa,iBAAgB,IAAK,QAAO,IAAK,EAA9C;AACH,CAFD;AAGA,aAAa,IAAb,CAAkB,aAAlB,EAAgC,MAAhC,EAAuC,KAAvC;AACA,QAAQ,GAAR,CAAY,QAAZ","file":"event-compiled.js","sourcesContent":["/**\r\n * Created by lea on 2017/10/10.\r\n */\r\n//引入 events 模块\r\nconst events = require(\"events\");\r\n//创建对象\r\nconst eventEmitter = new events.EventEmitter();\r\n\r\n//单个监听器\r\n//示例一\r\n//处理程序\r\nlet handler = function(){\r\n    console.log(\"hello boy\");\r\n};\r\n//绑定事件以及事件的处理程序\r\neventEmitter.on(\"hello\",handler);//为指定事件注册一个监听器，接受一个字符串 event 和一个回调函数\r\n//addListener(event, listener):为指定事件添加一个监听器到监听器数组的尾部。\r\neventEmitter.addListener(\"hello\",()=>{\r\n    console.log(\"hello girl,再次监听hello事件\");\r\n});\r\n//once(event, listener):为指定事件注册一个单次监听器，即 监听器最多只会触发一次，触发后立刻解除该监听器。\r\n//触发事件\r\neventEmitter.emit(\"hello\");\r\n//示例二\r\nlet connectHandler = function(){\r\n    console.log(\"连接成功\");\r\n    eventEmitter.emit(\"data_received\");\r\n};\r\neventEmitter.on(\"connect\",connectHandler);\r\nlet receivedHandler = function(){\r\n    console.log(\"接收数据\");\r\n};\r\neventEmitter.on(\"data_received\",receivedHandler);\r\neventEmitter.emit(\"connect\");\r\nconsole.log(\"程序执行结束\");\r\n\r\n//多个监听器\r\neventEmitter.on(\"changeEvent\",(arg1,arg2)=>{\r\n    console.log(`listener1 参数一：${arg1}；参数二：${arg2}`);\r\n});\r\neventEmitter.on(\"changeEvent\",(arg1,arg2)=>{\r\n    console.log(`listener2 参数一：${arg1}；参数二：${arg2}`);\r\n});\r\neventEmitter.emit(\"changeEvent\",\"name\",\"age\");\r\nconsole.log(\"程序执行结束\");"]}